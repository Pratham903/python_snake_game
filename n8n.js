const body = items[0].json?.body;
const payload = body?.payload;
let htmlContent = "";

const aiSummary = body?.summarize_data?.summary || "No AI summary available";

if (body?.repository_summary && body?.commit_summary && body?.summarize_data) {
  const repoSummary = body.repository_summary;
  const commitSummary = body.commit_summary;
  const repoData = body.summarize_data.repository_data;

  htmlContent = `
    <h2>${repoData.name} Repository Analysis</h2>
    <hr>
    <h3>Repository Summary</h3>
    <pre style="white-space: pre-wrap; word-wrap: break-word; font-family: monospace; background-color: #f4f4f4; padding: 15px; border-radius: 5px;">${repoSummary}</pre>
    
    <h3>Team Progress & Development Rhythm</h3>
    <pre style="white-space: pre-wrap; word-wrap: break-word; font-family: monospace; background-color: #f4f4f4; padding: 15px; border-radius: 5px;">${commitSummary}</pre>
    
    </br></br></br>
    <p><strong><i></i>This is automatically generated by <u>BAS Services.</u></strong></p>
  `;
} else if (payload?.head_commit) {
  const commit = payload.head_commit;

  const author = commit?.author ?? {
    name: "N/A",
    email: "N/A",
    username: "N/A",
  };

  let formattedTime = "N/A";
  if (commit?.timestamp) {
    const date = new Date(commit.timestamp);
    const options = { day: "numeric", month: "long", year: "numeric" };
    const time = date.toLocaleTimeString("en-IN", { timeZone: "Asia/Kolkata" });
    const formattedDate = date.toLocaleDateString("en-IN", options);
    formattedTime = `${formattedDate} at ${time} IST`;
  }

  const modifiedFiles = commit?.modified || [];

  htmlContent = `
    <p><strong>Author Name:</strong> ${author.name}</p>
    <p><strong>Email ID:</strong> ${author.email}</p>
    <p><strong>Commit ID:</strong> ${commit?.id ?? "N/A"}</p>
    <p><strong>Message:</strong> ${commit?.message ?? "No message"}</p>
    <p><strong>Timestamp:</strong> ${formattedTime}</p>
    <p><strong>Files Modified:</strong> ${
      modifiedFiles.join(", ") || "None"
    }</p>
    <p><strong>AI Summary:</strong> ${aiSummary}</p></br></br></br>
    <p><strong><i></i>This is automatically generated by <u>BAS Services.</u></strong></p>
  `;
} else if (payload?.pull_request) {
  const pr = payload.pull_request;
  const user = pr.user;

  htmlContent = `
    <p><strong>Pull Request Title:</strong> ${pr.title}</p>
    <p><strong>PR Body:</strong> ${pr.body || "No description provided"}</p>
    <p><strong>Author:</strong> ${user.login}</p>
    <p><strong>URL:</strong> <a href="${pr.html_url}">${pr.html_url}</a></p>
    <p><strong>Changed Files:</strong> ${pr.changed_files ?? "N/A"}</p>
    <p><strong>Additions:</strong> ${pr.additions ?? "N/A"}</p>
    <p><strong>Deletions:</strong> ${pr.deletions ?? "N/A"}</p>
    <p><strong>AI Summary:</strong> ${aiSummary}</p></br></br></br>
    <p><strong><i></i>This is automatically generated by <u>BAS Services.</u></strong></p>
  `;
} else if (payload?.issue) {
  const issue = payload.issue;
  const user = issue.user;

  htmlContent = `
    <p><strong>Issue Title:</strong> ${issue.title}</p>
    <p><strong>Issue Body:</strong> ${
      issue.body || "No description provided"
    }</p>
    <p><strong>Author:</strong> ${user.login}</p>
    <p><strong>URL:</strong> <a href="${issue.html_url}">${
    issue.html_url
  }</a></p>
    <p><strong>AI Summary:</strong> ${aiSummary}</p></br></br></br>
    <p><strong><i></i>This is automatically generated by <u>BAS Services.</u></strong></p>
  `;
} else {
  htmlContent = `<p>Received data, but it is not a recognized event type (Push, PR, Issue, or Summary Report).</p>
  </br></br></br>
  <p><strong><i></i>This is automatically generated by <u>BAS Services.</u></strong></p>`;
}

return [
  {
    json: {
      htmlBody: htmlContent,
    },
  },
];
